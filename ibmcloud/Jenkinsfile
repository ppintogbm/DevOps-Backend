pipeline{
	agent {
		kubernetes{
			cloud "kubernetes"
			label "backend-build"
			yamlFile "ibmcloud/BuildPod.yaml"
		}
  }
	parameters{
		string(defaultValue: "namespacecda", description: "Project/Namespace name", name: "project")
		string(defaultValue: "us.icr.io", description: "Registry",  name:"registry")
		string(defaultValue: "calculadora", description: "App Name", name: "app")
	}
	stages{
		stage('Prepare'){
			steps{
				script{
					tag = sh(script: 'git rev-parse --short HEAD', returnStdout: true).trim()
				}
			}
		}
		stage('Build Bars'){
			steps{
				container('ace'){
					sh "bash -c 'mqsipackagebar -a compiled.bar -w . -k ApiCalculadora'"
				}
			}
   	}
		stage('Build ACE'){
			environment {
				PATH = "/busybox:/kaniko:$PATH"
			}
			steps{
				/*
				container('buildah'){
					sh "groupadd --gi`pwd`d 1001 mqbrkrs"
					sh "stat compiled.bar"
					//sh "sudo buildah build-using-dockerfile ."
					sh "ibmcloud/build.sh"
					//sh "docker build -t ${registry}/${project}/${app}-api:${tag} ."
					//sh 'docker login -u $(whoami) -p $(cat /var/run/secrets/kubernetes.io/serviceaccount/token) ' + registry + '/' + project
					//sh "docker push ${registry}/${project}/${app}-api:${tag}"
				}
				*/
				container('kaniko'){
					script{
						destination = "${registry}/${project}/${app}-api:latest"
					}
					echo "Image to built: ${destination}"
					sh  '''#!/busybox/sh
							/kaniko/executor --dockerfile=Dockerfile --context=dir://`pwd` --destination="${registry}/${project}/${app}-api:${tag}"
							'''
				}
			}
		}
		stage('Build DB'){
			steps{
				container('kaniko'){
					//sh "docker build -t ${registry}/${project}/${app}-db:${tag} database"
					//sh 'docker login -u $(whoami) -p $(cat /var/run/secrets/kubernetes.io/serviceaccount/token) ' + registry + '/' + project
					//sh "docker push ${registry}/${project}/${app}-db:${tag}"
					script{
						destination = "${registry}/${project}/${app}-db:latest"
					}
					echo "Image to built: ${destination}"
					sh  '''#!/busybox/sh
							/kaniko/executor --dockerfile=Dockerfile --context=dir://`pwd`/database --destination="${registry}/${project}/${app}-db:${tag}"
							'''
				}	
			}
		}
	}
}
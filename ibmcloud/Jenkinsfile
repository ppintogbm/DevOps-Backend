pipeline{
	agent {
		kubernetes{
			cloud "kubernetes"
			label "backend-build"
			yamlFile "ibmcloud/BuildPod.yaml"
		}
  }
	parameters{
		string(defaultValue: "jenkins", description: "Project/Namespace name", name: "project")
		string(defaultValue: "172.30.1.1:5000", description: "Registry",  name:"registry")
		string(defaultValue: "api-calculadora", description: "App Name", name: "app")
	}
	stages{
		stage('Prepare'){
			steps{
				script{
					tag = sh(script: 'git rev-parse --short HEAD', returnStdout: true).trim()
				}
			}
		}
		stage('Build Bars'){
			steps{
				container('ace'){
					sh "bash -c 'mqsipackagebar -a compiled.bar -w . -k ApiCalculadora'"
				}
			}
   	}
		stage('Docker build'){
			parallel{
				stage('Build ACE'){
					steps{
						container('kaniko'){
							sh ''
							sh "/kaniko/executor --context `pwd` --dockerfile `pwd`/Dockerfile --verbosity debug --destination ${registry}/${project}/${app}-api:${tag}"
							//sh "docker build -t ${registry}/${project}/${app}-api:${tag} ."
							//sh 'docker login -u $(whoami) -p $(cat /var/run/secrets/kubernetes.io/serviceaccount/token) ' + registry + '/' + project
							//sh "docker push ${registry}/${project}/${app}-api:${tag}"
						}
					}
				}
				stage('Build DB'){
					steps{
						container('docker'){
							//sh "docker build -t ${registry}/${project}/${app}-db:${tag} database"
							//sh 'docker login -u $(whoami) -p $(cat /var/run/secrets/kubernetes.io/serviceaccount/token) ' + registry + '/' + project
							//sh "docker push ${registry}/${project}/${app}-db:${tag}"
						}	
					}
				}
			}
		}
	}
}

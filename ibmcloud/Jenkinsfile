pipeline{
	agent {
		kubernetes{
			cloud "kubernetes"
			label "backend-build"
			yamlFile "ibmcloud/BuildPod.yaml"
		}
  }
	parameters{
		string(defaultValue: "namespacecda", description: "Project/Namespace name", name: "project")
		string(defaultValue: "us.icr.io", description: "Registry",  name:"registry")
		string(defaultValue: "calculadora", description: "App Name", name: "app")
	}
	stages{
		stage('Prepare'){
			steps{
				script{
					tag = sh(script: 'git rev-parse --short HEAD', returnStdout: true).trim()
				}
			}
		}
		stage('Build Bars'){
			steps{
				container('ace'){
					sh "bash -c 'mqsipackagebar -a compiled.bar -w . -k ApiCalculadora'"
				}
			}
   	}
		stage('Build ACE'){
			environment {
				PATH = "/busybox:/kaniko:$PATH"
				DESTINATION = "${registry}/${project}/${app}-api:${tag}"
			}
			steps{
				container('kaniko'){
					sh  '''#!/busybox/sh
							echo "Building $DESTINATION"
							/kaniko/executor --dockerfile=Dockerfile --context=dir://`pwd` --destination="$DESTINATION"
							'''
				}
			}
		}
		stage('Build DB'){
			environment {
				PATH = "/busybox:/kaniko:$PATH"
				DESTINATION = "${registry}/${project}/${app}-db:${tag}"
			}
			steps{
				container('kaniko'){
					sh  '''#!/busybox/sh
							echo "Building $DESTINATION"
							/kaniko/executor --dockerfile=`pwd`/database/Dockerfile --context=dir://`pwd`/database/ --destination="$DESTINATION"
							'''
				}	
			}
		}
		stage('Deploy'){
			environment{
				APPNAME = "${app}"
				APIIMAGE = "${registry}/${project}/${app}-api"
				DBIMAGE = "${registry}/${project}/${app}-db"
				TAG = "${tag}"
			}
			steps{
				container('helm'){
					sh 	'''#!/bin/sh
							/helm init --client-only
							/helm upgrade $APPNAME ibmcloud/charts/calculadora-api --namespace default --install --set db.dbname=TEST,db.password=passw0rd,api.image.repository=$APIIMAGE,api.image.tag=$TAG,db.image.repository=$DBIMAGE,db.image.tag=$TAG
							'''
				}
			}
		}
	}
}